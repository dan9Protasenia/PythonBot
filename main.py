import asyncio

import telebot
import wikipedia
from pyowm.utils.config import get_default_config
from telebot import types
from mg import get_map_cell
from pyowm import OWM
from aiogram import Bot, executor, Dispatcher

bot = telebot.TeleBot('5954450073:AAEHyfoJS41_bctnzqaEZ-x8mzX__xLAhVs')
wikipedia.set_lang("ru")

cols, rows = 8, 8
keyboard = telebot.types.InlineKeyboardMarkup()
keyboard.row(telebot.types.InlineKeyboardButton('‚Üê', callback_data='left'),
            telebot.types.InlineKeyboardButton('‚Üë', callback_data='up'),
            telebot.types.InlineKeyboardButton('‚Üì', callback_data='down'),
            telebot.types.InlineKeyboardButton('‚Üí', callback_data='right'))
maps = {}

def get_map_str(map_cell, player):
    map_str = ""
    for y in range(rows * 2 - 1):
        for x in range(cols * 2 - 1):
            if map_cell[x + y * (cols * 2 - 1)]:
                map_str += "‚¨õ"
            elif (x, y) == player:
                map_str += "üî¥"
            else:
                map_str += "‚¨ú"
        map_str += "\n"

    return map_str

@bot.message_handler(commands_types=['play'])
def play_message(message):
    map_cell = get_map_cell(cols, rows)

    user_data = {
        'map': map_cell,
        'x': 0,
        'y': 0
    }
    maps[message.chat.id] = user_data
    bot.send_message(message.from_user.id, get_map_str(map_cell, (0, 0)), reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_func(query):
    user_data = maps[query.message.chat.id]
    new_x, new_y = user_data['x'], user_data['y']

    if query.data == 'left':
        new_x -= 1
    if query.data == 'right':
        new_x += 1
    if query.data == 'up':
        new_y -= 1
    if query.data == 'down':
        new_y += 1

    if new_x < 0 or new_x > 2 * cols - 2 or new_y < 0 or new_y > rows * 2 - 2:
        return None
    if user_data['map'][new_x + new_y * (cols * 2 - 1)]:
        return None

    user_data['x'], user_data['y'] = new_x, new_y

    if new_x == cols * 2 - 2 and new_y == rows * 2 - 2:
        bot.edit_message_text( chat_id=query.message.chat.id,
                               message_id=query.message.id,
                               text="–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏" )
        return None

    bot.edit_message_text( chat_id=query.message.chat.id,
                           message_id=query.message.id,
                           text=get_map_str(user_data['map'], (new_x, new_y)),
                           reply_markup=keyboard )

@bot.message_handler(commands=['start'])
def start(mess):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    wiki_button = types.KeyboardButton("–í–∏–∫–∏–ø–µ–¥–∏—è")
    game_button = types.KeyboardButton("–ò–≥—Ä–∞")
    weather_button = types.KeyboardButton("–ü–æ–≥–æ–¥–∞")

    markup.add(weather_button)
    markup.add(game_button)
    markup.add(wiki_button)

    bot.send_message(mess.chat.id,
                     '–¢–∏—Å–∫–∞–π –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è: \n –∫–Ω–æ–ø–∫—É',
                     reply_markup=markup)

@bot.message_handler(commands=["Wiki"])
def wiki(m):
    mess = bot.send_message(m.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ Wikipedia')
    bot.register_next_step_handler(mess, getwiki)

def getwiki(message):
    try:
        # ny = wikipedia.page(message)
        # # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Ç—ã—Å—è—á—É —Å–∏–º–≤–æ–ª–æ–≤
        # wikitext = ny.content[:1000]
        # # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–æ—á–∫–∞–º
        # wikimas = wikitext.split('.')
        # # –û—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏
        # wikimas = wikimas[:-1]
        # # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        # wikitext2 = ''
        # # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –≥–¥–µ –Ω–µ—Ç –∑–Ω–∞–∫–æ–≤ ¬´—Ä–∞–≤–Ω–æ¬ª (—Ç–æ –µ—Å—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
        # for x in wikimas:
        #     if not('==' in x):
        #             # –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –æ—Å—Ç–∞–ª–æ—Å—å –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –∫ –Ω–∞—à–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Ç–µ—Ä—è–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫ —Ç–æ—á–∫–∏ –Ω–∞ –º–µ—Å—Ç–æ
        #         if (len(( x.strip())) > 3):
        #            wikitext2 = wikitext2+x+'.'
        #     else:
        #         break
        # # –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π —É–±–∏—Ä–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
        # wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        # wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        # wikitext2 = re.sub('\{[^\{\}]*\}', '', wikitext2)
        # # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        # return wikitext2
        bot.send_message(message.chat.id, wikipedia.summary(message.text, sentences=4))
    except Exception as e:
        bot.send_message(message.chat.id, '–í —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º')
        print(repr(e))

@bot.message_handler(commands=['weather'])
def weather(message):
    msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞:')
    bot.register_next_step_handler(msg, get_weather)

def get_weather(message):
    try:
        config_dict = get_default_config()
        config_dict['language'] = 'ru'
        owm = OWM('ca3ab9ee20c2660513ece79ac3ad8664', config_dict)
        mgr = owm.weather_manager()
        observation = mgr.weather_at_place(message.text)
        w = observation.weather
        temperature_dict = w.temperature('celsius')
        wind_dict = w.wind()
        bot.send_message(message.chat.id, '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + str(temperature_dict['temp']) + '¬∞C' + '\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: ' + str(
            w.humidity) + '%' + '\n–í–µ—Ç–µ—Ä: ' + str(wind_dict['speed']) + '–º/c' + '\n–°–æ—Å—Ç–æ—è–Ω–∏–µ: ' + str(w.detailed_status))
    except Exception as e:
        bot.send_message(message.chat.id, '–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ üò®')
        print(repr(e))

@bot.message_handler(content_types=["text"])
def output(message):
    if message.text == '–í–∏–∫–∏–ø–µ–¥–∏—è':
        wiki(message)
    elif message.text == '–ò–≥—Ä–∞':
        play_message(message)
    elif message.text == '–ü–æ–≥–æ–¥–∞':
        weather(message)
    else:
        bot.send_message(message.chat.id, '—Ö–∑ –±—Ä–∞—Ç–∞–Ω')

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n'
                                      '/start = –Ω–∞—á–∞–ª–æ –≤–µ—Å–µ–ª—å—è\n'
                                      '/wiki = –≤–∏–∫–∏–ø–µ–¥–∏—è\n'
                                      '/game = –∏–≥—Ä–∞\n'
                                      '/weather = –ø–æ–≥–æ–¥–∞\n')

bot.polling(none_stop=True, interval=0)